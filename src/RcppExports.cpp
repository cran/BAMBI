// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// rowVars
arma::vec rowVars(arma::mat mat_in);
RcppExport SEXP BAMBI_rowVars(SEXP mat_inSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::mat >::type mat_in(mat_inSEXP);
    __result = Rcpp::wrap(rowVars(mat_in));
    return __result;
END_RCPP
}
// par_mat_permute
arma::cube par_mat_permute(arma::cube par_mat, arma::umat perm_lab);
RcppExport SEXP BAMBI_par_mat_permute(SEXP par_matSEXP, SEXP perm_labSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::cube >::type par_mat(par_matSEXP);
    Rcpp::traits::input_parameter< arma::umat >::type perm_lab(perm_labSEXP);
    __result = Rcpp::wrap(par_mat_permute(par_mat, perm_lab));
    return __result;
END_RCPP
}
// cID
Rcpp::NumericVector cID(arma::mat probs, int ncomp, arma::vec Uv);
RcppExport SEXP BAMBI_cID(SEXP probsSEXP, SEXP ncompSEXP, SEXP UvSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::mat >::type probs(probsSEXP);
    Rcpp::traits::input_parameter< int >::type ncomp(ncompSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type Uv(UvSEXP);
    __result = Rcpp::wrap(cID(probs, ncomp, Uv));
    return __result;
END_RCPP
}
// const_univm
double const_univm(double k);
RcppExport SEXP BAMBI_const_univm(SEXP kSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< double >::type k(kSEXP);
    __result = Rcpp::wrap(const_univm(k));
    return __result;
END_RCPP
}
// log_const_univm_all
arma::vec log_const_univm_all(arma::mat par_mat);
RcppExport SEXP BAMBI_log_const_univm_all(SEXP par_matSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::mat >::type par_mat(par_matSEXP);
    __result = Rcpp::wrap(log_const_univm_all(par_mat));
    return __result;
END_RCPP
}
// ldunivmnum
double ldunivmnum(double x, arma::vec par);
RcppExport SEXP BAMBI_ldunivmnum(SEXP xSEXP, SEXP parSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< double >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type par(parSEXP);
    __result = Rcpp::wrap(ldunivmnum(x, par));
    return __result;
END_RCPP
}
// dunivm_manyx_onepar
arma::vec dunivm_manyx_onepar(arma::vec x, double k, double mu);
RcppExport SEXP BAMBI_dunivm_manyx_onepar(SEXP xSEXP, SEXP kSEXP, SEXP muSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::vec >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type k(kSEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    __result = Rcpp::wrap(dunivm_manyx_onepar(x, k, mu));
    return __result;
END_RCPP
}
// dunivm_manyx_manypar
arma::vec dunivm_manyx_manypar(arma::vec x, arma::vec k, arma::vec mu);
RcppExport SEXP BAMBI_dunivm_manyx_manypar(SEXP xSEXP, SEXP kSEXP, SEXP muSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::vec >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type k(kSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type mu(muSEXP);
    __result = Rcpp::wrap(dunivm_manyx_manypar(x, k, mu));
    return __result;
END_RCPP
}
// dunivm_onex_manypar
arma::vec dunivm_onex_manypar(double x, arma::vec k, arma::vec mu);
RcppExport SEXP BAMBI_dunivm_onex_manypar(SEXP xSEXP, SEXP kSEXP, SEXP muSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< double >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type k(kSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type mu(muSEXP);
    __result = Rcpp::wrap(dunivm_onex_manypar(x, k, mu));
    return __result;
END_RCPP
}
// runivm_onepar
arma::vec runivm_onepar(int n, double k, double mu);
RcppExport SEXP BAMBI_runivm_onepar(SEXP nSEXP, SEXP kSEXP, SEXP muSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< double >::type k(kSEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    __result = Rcpp::wrap(runivm_onepar(n, k, mu));
    return __result;
END_RCPP
}
// runivm_manypar
arma::mat runivm_manypar(arma::vec k, arma::vec mu);
RcppExport SEXP BAMBI_runivm_manypar(SEXP kSEXP, SEXP muSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::vec >::type k(kSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type mu(muSEXP);
    __result = Rcpp::wrap(runivm_manypar(k, mu));
    return __result;
END_RCPP
}
// univmmix
double univmmix(double x, arma::mat par, arma::vec pi, arma::vec log_c_von);
RcppExport SEXP BAMBI_univmmix(SEXP xSEXP, SEXP parSEXP, SEXP piSEXP, SEXP log_c_vonSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< double >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type par(parSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type pi(piSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type log_c_von(log_c_vonSEXP);
    __result = Rcpp::wrap(univmmix(x, par, pi, log_c_von));
    return __result;
END_RCPP
}
// univmmix_manyx
arma::vec univmmix_manyx(arma::vec x, arma::mat par, arma::vec pi, arma::vec log_c);
RcppExport SEXP BAMBI_univmmix_manyx(SEXP xSEXP, SEXP parSEXP, SEXP piSEXP, SEXP log_cSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::vec >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type par(parSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type pi(piSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type log_c(log_cSEXP);
    __result = Rcpp::wrap(univmmix_manyx(x, par, pi, log_c));
    return __result;
END_RCPP
}
// mem_p_univm
arma::mat mem_p_univm(arma::vec data, arma::mat par, arma::vec pi, arma::vec log_c_von, int ncores);
RcppExport SEXP BAMBI_mem_p_univm(SEXP dataSEXP, SEXP parSEXP, SEXP piSEXP, SEXP log_c_vonSEXP, SEXP ncoresSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::vec >::type data(dataSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type par(parSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type pi(piSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type log_c_von(log_c_vonSEXP);
    Rcpp::traits::input_parameter< int >::type ncores(ncoresSEXP);
    __result = Rcpp::wrap(mem_p_univm(data, par, pi, log_c_von, ncores));
    return __result;
END_RCPP
}
// llik_univm_full
double llik_univm_full(arma::vec data, arma::mat par, arma::vec pi, arma::vec log_c, int ncores);
RcppExport SEXP BAMBI_llik_univm_full(SEXP dataSEXP, SEXP parSEXP, SEXP piSEXP, SEXP log_cSEXP, SEXP ncoresSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::vec >::type data(dataSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type par(parSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type pi(piSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type log_c(log_cSEXP);
    Rcpp::traits::input_parameter< int >::type ncores(ncoresSEXP);
    __result = Rcpp::wrap(llik_univm_full(data, par, pi, log_c, ncores));
    return __result;
END_RCPP
}
// grad_univm_all_comp
arma::mat grad_univm_all_comp(arma::vec data, arma::mat par_mat, arma::vec pi, int ncores);
RcppExport SEXP BAMBI_grad_univm_all_comp(SEXP dataSEXP, SEXP par_matSEXP, SEXP piSEXP, SEXP ncoresSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::vec >::type data(dataSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type par_mat(par_matSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type pi(piSEXP);
    Rcpp::traits::input_parameter< int >::type ncores(ncoresSEXP);
    __result = Rcpp::wrap(grad_univm_all_comp(data, par_mat, pi, ncores));
    return __result;
END_RCPP
}
// l_const_uniwnorm
double l_const_uniwnorm(double k);
RcppExport SEXP BAMBI_l_const_uniwnorm(SEXP kSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< double >::type k(kSEXP);
    __result = Rcpp::wrap(l_const_uniwnorm(k));
    return __result;
END_RCPP
}
// const_uniwnorm
double const_uniwnorm(double k);
RcppExport SEXP BAMBI_const_uniwnorm(SEXP kSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< double >::type k(kSEXP);
    __result = Rcpp::wrap(const_uniwnorm(k));
    return __result;
END_RCPP
}
// log_const_uniwnorm_all
arma::vec log_const_uniwnorm_all(arma::mat par_mat);
RcppExport SEXP BAMBI_log_const_uniwnorm_all(SEXP par_matSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::mat >::type par_mat(par_matSEXP);
    __result = Rcpp::wrap(log_const_uniwnorm_all(par_mat));
    return __result;
END_RCPP
}
// lduniwnormnum
double lduniwnormnum(double x, arma::vec par, arma::vec omega_2pi_1d);
RcppExport SEXP BAMBI_lduniwnormnum(SEXP xSEXP, SEXP parSEXP, SEXP omega_2pi_1dSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< double >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type par(parSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type omega_2pi_1d(omega_2pi_1dSEXP);
    __result = Rcpp::wrap(lduniwnormnum(x, par, omega_2pi_1d));
    return __result;
END_RCPP
}
// duniwnorm_manyx_onepar
arma::vec duniwnorm_manyx_onepar(arma::vec x, double k, double mu, arma::vec omega_2pi_1d);
RcppExport SEXP BAMBI_duniwnorm_manyx_onepar(SEXP xSEXP, SEXP kSEXP, SEXP muSEXP, SEXP omega_2pi_1dSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::vec >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type k(kSEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type omega_2pi_1d(omega_2pi_1dSEXP);
    __result = Rcpp::wrap(duniwnorm_manyx_onepar(x, k, mu, omega_2pi_1d));
    return __result;
END_RCPP
}
// duniwnorm_manyx_manypar
arma::vec duniwnorm_manyx_manypar(arma::vec x, arma::vec k, arma::vec mu, arma::vec omega_2pi_1d);
RcppExport SEXP BAMBI_duniwnorm_manyx_manypar(SEXP xSEXP, SEXP kSEXP, SEXP muSEXP, SEXP omega_2pi_1dSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::vec >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type k(kSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type mu(muSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type omega_2pi_1d(omega_2pi_1dSEXP);
    __result = Rcpp::wrap(duniwnorm_manyx_manypar(x, k, mu, omega_2pi_1d));
    return __result;
END_RCPP
}
// duniwnorm_onex_manypar
arma::vec duniwnorm_onex_manypar(double x, arma::vec k, arma::vec mu, arma::vec omega_2pi_1d);
RcppExport SEXP BAMBI_duniwnorm_onex_manypar(SEXP xSEXP, SEXP kSEXP, SEXP muSEXP, SEXP omega_2pi_1dSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< double >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type k(kSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type mu(muSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type omega_2pi_1d(omega_2pi_1dSEXP);
    __result = Rcpp::wrap(duniwnorm_onex_manypar(x, k, mu, omega_2pi_1d));
    return __result;
END_RCPP
}
// uniwnormmix
double uniwnormmix(double x, arma::mat par, arma::vec pi, arma::vec log_c_von, arma::vec omega_2pi_1d);
RcppExport SEXP BAMBI_uniwnormmix(SEXP xSEXP, SEXP parSEXP, SEXP piSEXP, SEXP log_c_vonSEXP, SEXP omega_2pi_1dSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< double >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type par(parSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type pi(piSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type log_c_von(log_c_vonSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type omega_2pi_1d(omega_2pi_1dSEXP);
    __result = Rcpp::wrap(uniwnormmix(x, par, pi, log_c_von, omega_2pi_1d));
    return __result;
END_RCPP
}
// uniwnormmix_manyx
arma::vec uniwnormmix_manyx(arma::vec x, arma::mat par, arma::vec pi, arma::vec log_c, arma::vec omega_2pi_1d);
RcppExport SEXP BAMBI_uniwnormmix_manyx(SEXP xSEXP, SEXP parSEXP, SEXP piSEXP, SEXP log_cSEXP, SEXP omega_2pi_1dSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::vec >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type par(parSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type pi(piSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type log_c(log_cSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type omega_2pi_1d(omega_2pi_1dSEXP);
    __result = Rcpp::wrap(uniwnormmix_manyx(x, par, pi, log_c, omega_2pi_1d));
    return __result;
END_RCPP
}
// mem_p_uniwnorm
arma::mat mem_p_uniwnorm(arma::vec data, arma::mat par, arma::vec pi, arma::vec log_c_von, arma::vec omega_2pi_1d, int ncores);
RcppExport SEXP BAMBI_mem_p_uniwnorm(SEXP dataSEXP, SEXP parSEXP, SEXP piSEXP, SEXP log_c_vonSEXP, SEXP omega_2pi_1dSEXP, SEXP ncoresSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::vec >::type data(dataSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type par(parSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type pi(piSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type log_c_von(log_c_vonSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type omega_2pi_1d(omega_2pi_1dSEXP);
    Rcpp::traits::input_parameter< int >::type ncores(ncoresSEXP);
    __result = Rcpp::wrap(mem_p_uniwnorm(data, par, pi, log_c_von, omega_2pi_1d, ncores));
    return __result;
END_RCPP
}
// llik_uniwnorm_full
double llik_uniwnorm_full(arma::vec data, arma::mat par, arma::vec pi, arma::vec log_c, arma::vec omega_2pi_1d, int ncores);
RcppExport SEXP BAMBI_llik_uniwnorm_full(SEXP dataSEXP, SEXP parSEXP, SEXP piSEXP, SEXP log_cSEXP, SEXP omega_2pi_1dSEXP, SEXP ncoresSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::vec >::type data(dataSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type par(parSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type pi(piSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type log_c(log_cSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type omega_2pi_1d(omega_2pi_1dSEXP);
    Rcpp::traits::input_parameter< int >::type ncores(ncoresSEXP);
    __result = Rcpp::wrap(llik_uniwnorm_full(data, par, pi, log_c, omega_2pi_1d, ncores));
    return __result;
END_RCPP
}
// grad_uniwnorm_all_comp
arma::mat grad_uniwnorm_all_comp(arma::vec data, arma::mat par_mat, arma::vec pi, arma::vec omega_2pi_1d, int ncores);
RcppExport SEXP BAMBI_grad_uniwnorm_all_comp(SEXP dataSEXP, SEXP par_matSEXP, SEXP piSEXP, SEXP omega_2pi_1dSEXP, SEXP ncoresSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::vec >::type data(dataSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type par_mat(par_matSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type pi(piSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type omega_2pi_1d(omega_2pi_1dSEXP);
    Rcpp::traits::input_parameter< int >::type ncores(ncoresSEXP);
    __result = Rcpp::wrap(grad_uniwnorm_all_comp(data, par_mat, pi, omega_2pi_1d, ncores));
    return __result;
END_RCPP
}
// BESSI0_C
double BESSI0_C(double x);
RcppExport SEXP BAMBI_BESSI0_C(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< double >::type x(xSEXP);
    __result = Rcpp::wrap(BESSI0_C(x));
    return __result;
END_RCPP
}
// const_vmcos_anltc
double const_vmcos_anltc(double k1, double k2, double k3);
RcppExport SEXP BAMBI_const_vmcos_anltc(SEXP k1SEXP, SEXP k2SEXP, SEXP k3SEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< double >::type k1(k1SEXP);
    Rcpp::traits::input_parameter< double >::type k2(k2SEXP);
    Rcpp::traits::input_parameter< double >::type k3(k3SEXP);
    __result = Rcpp::wrap(const_vmcos_anltc(k1, k2, k3));
    return __result;
END_RCPP
}
// const_vmcos_mc
double const_vmcos_mc(double k1, double k2, double k3, arma::mat uni_rand, int ncores);
RcppExport SEXP BAMBI_const_vmcos_mc(SEXP k1SEXP, SEXP k2SEXP, SEXP k3SEXP, SEXP uni_randSEXP, SEXP ncoresSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< double >::type k1(k1SEXP);
    Rcpp::traits::input_parameter< double >::type k2(k2SEXP);
    Rcpp::traits::input_parameter< double >::type k3(k3SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type uni_rand(uni_randSEXP);
    Rcpp::traits::input_parameter< int >::type ncores(ncoresSEXP);
    __result = Rcpp::wrap(const_vmcos_mc(k1, k2, k3, uni_rand, ncores));
    return __result;
END_RCPP
}
// const_vmcos
double const_vmcos(double k1, double k2, double k3, arma::mat uni_rand, int ncores);
RcppExport SEXP BAMBI_const_vmcos(SEXP k1SEXP, SEXP k2SEXP, SEXP k3SEXP, SEXP uni_randSEXP, SEXP ncoresSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< double >::type k1(k1SEXP);
    Rcpp::traits::input_parameter< double >::type k2(k2SEXP);
    Rcpp::traits::input_parameter< double >::type k3(k3SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type uni_rand(uni_randSEXP);
    Rcpp::traits::input_parameter< int >::type ncores(ncoresSEXP);
    __result = Rcpp::wrap(const_vmcos(k1, k2, k3, uni_rand, ncores));
    return __result;
END_RCPP
}
// d_const_vmcos_k1_anltc
double d_const_vmcos_k1_anltc(double k1, double k2, double k3);
RcppExport SEXP BAMBI_d_const_vmcos_k1_anltc(SEXP k1SEXP, SEXP k2SEXP, SEXP k3SEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< double >::type k1(k1SEXP);
    Rcpp::traits::input_parameter< double >::type k2(k2SEXP);
    Rcpp::traits::input_parameter< double >::type k3(k3SEXP);
    __result = Rcpp::wrap(d_const_vmcos_k1_anltc(k1, k2, k3));
    return __result;
END_RCPP
}
// d_const_vmcos_anltc
arma::vec d_const_vmcos_anltc(double k1, double k2, double k3);
RcppExport SEXP BAMBI_d_const_vmcos_anltc(SEXP k1SEXP, SEXP k2SEXP, SEXP k3SEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< double >::type k1(k1SEXP);
    Rcpp::traits::input_parameter< double >::type k2(k2SEXP);
    Rcpp::traits::input_parameter< double >::type k3(k3SEXP);
    __result = Rcpp::wrap(d_const_vmcos_anltc(k1, k2, k3));
    return __result;
END_RCPP
}
// d_const_vmcos_mc
arma::vec d_const_vmcos_mc(double k1, double k2, double k3, arma::mat uni_rand, int ncores);
RcppExport SEXP BAMBI_d_const_vmcos_mc(SEXP k1SEXP, SEXP k2SEXP, SEXP k3SEXP, SEXP uni_randSEXP, SEXP ncoresSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< double >::type k1(k1SEXP);
    Rcpp::traits::input_parameter< double >::type k2(k2SEXP);
    Rcpp::traits::input_parameter< double >::type k3(k3SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type uni_rand(uni_randSEXP);
    Rcpp::traits::input_parameter< int >::type ncores(ncoresSEXP);
    __result = Rcpp::wrap(d_const_vmcos_mc(k1, k2, k3, uni_rand, ncores));
    return __result;
END_RCPP
}
// d_const_vmcos
arma::vec d_const_vmcos(arma::vec par, arma::mat uni_rand, int ncores);
RcppExport SEXP BAMBI_d_const_vmcos(SEXP parSEXP, SEXP uni_randSEXP, SEXP ncoresSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::vec >::type par(parSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type uni_rand(uni_randSEXP);
    Rcpp::traits::input_parameter< int >::type ncores(ncoresSEXP);
    __result = Rcpp::wrap(d_const_vmcos(par, uni_rand, ncores));
    return __result;
END_RCPP
}
// log_const_vmcos_all
arma::vec log_const_vmcos_all(arma::mat par_mat, arma::mat uni_rand, int ncores);
RcppExport SEXP BAMBI_log_const_vmcos_all(SEXP par_matSEXP, SEXP uni_randSEXP, SEXP ncoresSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::mat >::type par_mat(par_matSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type uni_rand(uni_randSEXP);
    Rcpp::traits::input_parameter< int >::type ncores(ncoresSEXP);
    __result = Rcpp::wrap(log_const_vmcos_all(par_mat, uni_rand, ncores));
    return __result;
END_RCPP
}
// ldcosnum
double ldcosnum(double x, double y, arma::vec par);
RcppExport SEXP BAMBI_ldcosnum(SEXP xSEXP, SEXP ySEXP, SEXP parSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< double >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::vec >::type par(parSEXP);
    __result = Rcpp::wrap(ldcosnum(x, y, par));
    return __result;
END_RCPP
}
// dcos_onex_manypar
arma::vec dcos_onex_manypar(arma::vec x, arma::vec k1, arma::vec k2, arma::vec k3, arma::vec mu1, arma::vec mu2, arma::vec l_const_all);
RcppExport SEXP BAMBI_dcos_onex_manypar(SEXP xSEXP, SEXP k1SEXP, SEXP k2SEXP, SEXP k3SEXP, SEXP mu1SEXP, SEXP mu2SEXP, SEXP l_const_allSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::vec >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type k1(k1SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type k2(k2SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type k3(k3SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type mu1(mu1SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type mu2(mu2SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type l_const_all(l_const_allSEXP);
    __result = Rcpp::wrap(dcos_onex_manypar(x, k1, k2, k3, mu1, mu2, l_const_all));
    return __result;
END_RCPP
}
// dcos_manyx_onepar
arma::vec dcos_manyx_onepar(arma::mat x, double k1, double k2, double k3, double mu1, double mu2, double l_const);
RcppExport SEXP BAMBI_dcos_manyx_onepar(SEXP xSEXP, SEXP k1SEXP, SEXP k2SEXP, SEXP k3SEXP, SEXP mu1SEXP, SEXP mu2SEXP, SEXP l_constSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type k1(k1SEXP);
    Rcpp::traits::input_parameter< double >::type k2(k2SEXP);
    Rcpp::traits::input_parameter< double >::type k3(k3SEXP);
    Rcpp::traits::input_parameter< double >::type mu1(mu1SEXP);
    Rcpp::traits::input_parameter< double >::type mu2(mu2SEXP);
    Rcpp::traits::input_parameter< double >::type l_const(l_constSEXP);
    __result = Rcpp::wrap(dcos_manyx_onepar(x, k1, k2, k3, mu1, mu2, l_const));
    return __result;
END_RCPP
}
// dcos_manyx_manypar
arma::vec dcos_manyx_manypar(arma::mat x, arma::vec k1, arma::vec k2, arma::vec k3, arma::vec mu1, arma::vec mu2, arma::vec l_const_all);
RcppExport SEXP BAMBI_dcos_manyx_manypar(SEXP xSEXP, SEXP k1SEXP, SEXP k2SEXP, SEXP k3SEXP, SEXP mu1SEXP, SEXP mu2SEXP, SEXP l_const_allSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type k1(k1SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type k2(k2SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type k3(k3SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type mu1(mu1SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type mu2(mu2SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type l_const_all(l_const_allSEXP);
    __result = Rcpp::wrap(dcos_manyx_manypar(x, k1, k2, k3, mu1, mu2, l_const_all));
    return __result;
END_RCPP
}
// rcos_onepar
arma::mat rcos_onepar(int n, double k1, double k2, double k3, double mu1, double mu2, double I_upper_bd);
RcppExport SEXP BAMBI_rcos_onepar(SEXP nSEXP, SEXP k1SEXP, SEXP k2SEXP, SEXP k3SEXP, SEXP mu1SEXP, SEXP mu2SEXP, SEXP I_upper_bdSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< double >::type k1(k1SEXP);
    Rcpp::traits::input_parameter< double >::type k2(k2SEXP);
    Rcpp::traits::input_parameter< double >::type k3(k3SEXP);
    Rcpp::traits::input_parameter< double >::type mu1(mu1SEXP);
    Rcpp::traits::input_parameter< double >::type mu2(mu2SEXP);
    Rcpp::traits::input_parameter< double >::type I_upper_bd(I_upper_bdSEXP);
    __result = Rcpp::wrap(rcos_onepar(n, k1, k2, k3, mu1, mu2, I_upper_bd));
    return __result;
END_RCPP
}
// rcos_manypar
arma::mat rcos_manypar(arma::vec k1, arma::vec k2, arma::vec k3, arma::vec mu1, arma::vec mu2, arma::vec I_upper_bd);
RcppExport SEXP BAMBI_rcos_manypar(SEXP k1SEXP, SEXP k2SEXP, SEXP k3SEXP, SEXP mu1SEXP, SEXP mu2SEXP, SEXP I_upper_bdSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::vec >::type k1(k1SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type k2(k2SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type k3(k3SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type mu1(mu1SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type mu2(mu2SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type I_upper_bd(I_upper_bdSEXP);
    __result = Rcpp::wrap(rcos_manypar(k1, k2, k3, mu1, mu2, I_upper_bd));
    return __result;
END_RCPP
}
// mem_p_cos
arma::mat mem_p_cos(arma::mat data, arma::mat par, arma::vec pi, arma::vec log_c_von, int ncores);
RcppExport SEXP BAMBI_mem_p_cos(SEXP dataSEXP, SEXP parSEXP, SEXP piSEXP, SEXP log_c_vonSEXP, SEXP ncoresSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type par(parSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type pi(piSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type log_c_von(log_c_vonSEXP);
    Rcpp::traits::input_parameter< int >::type ncores(ncoresSEXP);
    __result = Rcpp::wrap(mem_p_cos(data, par, pi, log_c_von, ncores));
    return __result;
END_RCPP
}
// llik_vmcos_full
double llik_vmcos_full(arma::mat data, arma::mat par, arma::vec pi, arma::vec log_c, int ncores);
RcppExport SEXP BAMBI_llik_vmcos_full(SEXP dataSEXP, SEXP parSEXP, SEXP piSEXP, SEXP log_cSEXP, SEXP ncoresSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type par(parSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type pi(piSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type log_c(log_cSEXP);
    Rcpp::traits::input_parameter< int >::type ncores(ncoresSEXP);
    __result = Rcpp::wrap(llik_vmcos_full(data, par, pi, log_c, ncores));
    return __result;
END_RCPP
}
// grad_log_vmcos_one_comp_i
arma::vec grad_log_vmcos_one_comp_i(double x, double y, arma::vec par, double c_vmcos, arma::vec del_const_vmcos);
RcppExport SEXP BAMBI_grad_log_vmcos_one_comp_i(SEXP xSEXP, SEXP ySEXP, SEXP parSEXP, SEXP c_vmcosSEXP, SEXP del_const_vmcosSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< double >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::vec >::type par(parSEXP);
    Rcpp::traits::input_parameter< double >::type c_vmcos(c_vmcosSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type del_const_vmcos(del_const_vmcosSEXP);
    __result = Rcpp::wrap(grad_log_vmcos_one_comp_i(x, y, par, c_vmcos, del_const_vmcos));
    return __result;
END_RCPP
}
// grad_vmcos_all_comp
arma::mat grad_vmcos_all_comp(arma::mat data, arma::mat par_mat, arma::vec pi, arma::mat uni_rand, int ncores);
RcppExport SEXP BAMBI_grad_vmcos_all_comp(SEXP dataSEXP, SEXP par_matSEXP, SEXP piSEXP, SEXP uni_randSEXP, SEXP ncoresSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type par_mat(par_matSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type pi(piSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type uni_rand(uni_randSEXP);
    Rcpp::traits::input_parameter< int >::type ncores(ncoresSEXP);
    __result = Rcpp::wrap(grad_vmcos_all_comp(data, par_mat, pi, uni_rand, ncores));
    return __result;
END_RCPP
}
// vmcosmix
double vmcosmix(double x, double y, arma::mat par, arma::vec pi, arma::vec log_c_von);
RcppExport SEXP BAMBI_vmcosmix(SEXP xSEXP, SEXP ySEXP, SEXP parSEXP, SEXP piSEXP, SEXP log_c_vonSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< double >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type par(parSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type pi(piSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type log_c_von(log_c_vonSEXP);
    __result = Rcpp::wrap(vmcosmix(x, y, par, pi, log_c_von));
    return __result;
END_RCPP
}
// vmcosmix_manyx
arma::vec vmcosmix_manyx(arma::mat x, arma::mat par, arma::vec pi, arma::vec log_c_von);
RcppExport SEXP BAMBI_vmcosmix_manyx(SEXP xSEXP, SEXP parSEXP, SEXP piSEXP, SEXP log_c_vonSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type par(parSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type pi(piSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type log_c_von(log_c_vonSEXP);
    __result = Rcpp::wrap(vmcosmix_manyx(x, par, pi, log_c_von));
    return __result;
END_RCPP
}
// const_vmsin
double const_vmsin(double k1, double k2, double lambda);
RcppExport SEXP BAMBI_const_vmsin(SEXP k1SEXP, SEXP k2SEXP, SEXP lambdaSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< double >::type k1(k1SEXP);
    Rcpp::traits::input_parameter< double >::type k2(k2SEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    __result = Rcpp::wrap(const_vmsin(k1, k2, lambda));
    return __result;
END_RCPP
}
// d_const_vmsin_lambda
double d_const_vmsin_lambda(double k1, double k2, double lambda);
RcppExport SEXP BAMBI_d_const_vmsin_lambda(SEXP k1SEXP, SEXP k2SEXP, SEXP lambdaSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< double >::type k1(k1SEXP);
    Rcpp::traits::input_parameter< double >::type k2(k2SEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    __result = Rcpp::wrap(d_const_vmsin_lambda(k1, k2, lambda));
    return __result;
END_RCPP
}
// d_const_vmsin_k1
double d_const_vmsin_k1(double k1, double k2, double lambda);
RcppExport SEXP BAMBI_d_const_vmsin_k1(SEXP k1SEXP, SEXP k2SEXP, SEXP lambdaSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< double >::type k1(k1SEXP);
    Rcpp::traits::input_parameter< double >::type k2(k2SEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    __result = Rcpp::wrap(d_const_vmsin_k1(k1, k2, lambda));
    return __result;
END_RCPP
}
// d_const_vmsin_k2
double d_const_vmsin_k2(double k1, double k2, double lambda);
RcppExport SEXP BAMBI_d_const_vmsin_k2(SEXP k1SEXP, SEXP k2SEXP, SEXP lambdaSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< double >::type k1(k1SEXP);
    Rcpp::traits::input_parameter< double >::type k2(k2SEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    __result = Rcpp::wrap(d_const_vmsin_k2(k1, k2, lambda));
    return __result;
END_RCPP
}
// d_const_vmsin
arma::vec d_const_vmsin(arma::vec par);
RcppExport SEXP BAMBI_d_const_vmsin(SEXP parSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::vec >::type par(parSEXP);
    __result = Rcpp::wrap(d_const_vmsin(par));
    return __result;
END_RCPP
}
// log_const_vmsin_all
arma::vec log_const_vmsin_all(arma::mat par_mat);
RcppExport SEXP BAMBI_log_const_vmsin_all(SEXP par_matSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::mat >::type par_mat(par_matSEXP);
    __result = Rcpp::wrap(log_const_vmsin_all(par_mat));
    return __result;
END_RCPP
}
// ldsinnum
double ldsinnum(double x, double y, arma::vec par);
RcppExport SEXP BAMBI_ldsinnum(SEXP xSEXP, SEXP ySEXP, SEXP parSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< double >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::vec >::type par(parSEXP);
    __result = Rcpp::wrap(ldsinnum(x, y, par));
    return __result;
END_RCPP
}
// dsin_onex_manypar
arma::vec dsin_onex_manypar(arma::vec x, arma::vec k1, arma::vec k2, arma::vec k3, arma::vec mu1, arma::vec mu2);
RcppExport SEXP BAMBI_dsin_onex_manypar(SEXP xSEXP, SEXP k1SEXP, SEXP k2SEXP, SEXP k3SEXP, SEXP mu1SEXP, SEXP mu2SEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::vec >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type k1(k1SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type k2(k2SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type k3(k3SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type mu1(mu1SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type mu2(mu2SEXP);
    __result = Rcpp::wrap(dsin_onex_manypar(x, k1, k2, k3, mu1, mu2));
    return __result;
END_RCPP
}
// dsin_manyx_onepar
arma::vec dsin_manyx_onepar(arma::mat x, double k1, double k2, double k3, double mu1, double mu2);
RcppExport SEXP BAMBI_dsin_manyx_onepar(SEXP xSEXP, SEXP k1SEXP, SEXP k2SEXP, SEXP k3SEXP, SEXP mu1SEXP, SEXP mu2SEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type k1(k1SEXP);
    Rcpp::traits::input_parameter< double >::type k2(k2SEXP);
    Rcpp::traits::input_parameter< double >::type k3(k3SEXP);
    Rcpp::traits::input_parameter< double >::type mu1(mu1SEXP);
    Rcpp::traits::input_parameter< double >::type mu2(mu2SEXP);
    __result = Rcpp::wrap(dsin_manyx_onepar(x, k1, k2, k3, mu1, mu2));
    return __result;
END_RCPP
}
// dsin_manyx_manypar
arma::vec dsin_manyx_manypar(arma::mat x, arma::vec k1, arma::vec k2, arma::vec k3, arma::vec mu1, arma::vec mu2);
RcppExport SEXP BAMBI_dsin_manyx_manypar(SEXP xSEXP, SEXP k1SEXP, SEXP k2SEXP, SEXP k3SEXP, SEXP mu1SEXP, SEXP mu2SEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type k1(k1SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type k2(k2SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type k3(k3SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type mu1(mu1SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type mu2(mu2SEXP);
    __result = Rcpp::wrap(dsin_manyx_manypar(x, k1, k2, k3, mu1, mu2));
    return __result;
END_RCPP
}
// rsin_onepar
arma::mat rsin_onepar(int n, double k1, double k2, double k3, double mu1, double mu2, double I_upper_bd);
RcppExport SEXP BAMBI_rsin_onepar(SEXP nSEXP, SEXP k1SEXP, SEXP k2SEXP, SEXP k3SEXP, SEXP mu1SEXP, SEXP mu2SEXP, SEXP I_upper_bdSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< double >::type k1(k1SEXP);
    Rcpp::traits::input_parameter< double >::type k2(k2SEXP);
    Rcpp::traits::input_parameter< double >::type k3(k3SEXP);
    Rcpp::traits::input_parameter< double >::type mu1(mu1SEXP);
    Rcpp::traits::input_parameter< double >::type mu2(mu2SEXP);
    Rcpp::traits::input_parameter< double >::type I_upper_bd(I_upper_bdSEXP);
    __result = Rcpp::wrap(rsin_onepar(n, k1, k2, k3, mu1, mu2, I_upper_bd));
    return __result;
END_RCPP
}
// rsin_manypar
arma::mat rsin_manypar(arma::vec k1, arma::vec k2, arma::vec k3, arma::vec mu1, arma::vec mu2, arma::vec I_upper_bd);
RcppExport SEXP BAMBI_rsin_manypar(SEXP k1SEXP, SEXP k2SEXP, SEXP k3SEXP, SEXP mu1SEXP, SEXP mu2SEXP, SEXP I_upper_bdSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::vec >::type k1(k1SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type k2(k2SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type k3(k3SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type mu1(mu1SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type mu2(mu2SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type I_upper_bd(I_upper_bdSEXP);
    __result = Rcpp::wrap(rsin_manypar(k1, k2, k3, mu1, mu2, I_upper_bd));
    return __result;
END_RCPP
}
// mem_p_sin
arma::mat mem_p_sin(arma::mat data, arma::mat par, arma::vec pi, arma::vec log_c_von, int ncores);
RcppExport SEXP BAMBI_mem_p_sin(SEXP dataSEXP, SEXP parSEXP, SEXP piSEXP, SEXP log_c_vonSEXP, SEXP ncoresSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type par(parSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type pi(piSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type log_c_von(log_c_vonSEXP);
    Rcpp::traits::input_parameter< int >::type ncores(ncoresSEXP);
    __result = Rcpp::wrap(mem_p_sin(data, par, pi, log_c_von, ncores));
    return __result;
END_RCPP
}
// llik_vmsin_full
double llik_vmsin_full(arma::mat data, arma::mat par, arma::vec pi, arma::vec log_c, int ncores);
RcppExport SEXP BAMBI_llik_vmsin_full(SEXP dataSEXP, SEXP parSEXP, SEXP piSEXP, SEXP log_cSEXP, SEXP ncoresSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type par(parSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type pi(piSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type log_c(log_cSEXP);
    Rcpp::traits::input_parameter< int >::type ncores(ncoresSEXP);
    __result = Rcpp::wrap(llik_vmsin_full(data, par, pi, log_c, ncores));
    return __result;
END_RCPP
}
// grad_vmsin_all_comp
arma::mat grad_vmsin_all_comp(arma::mat data, arma::mat par_mat, arma::vec pi, int ncores);
RcppExport SEXP BAMBI_grad_vmsin_all_comp(SEXP dataSEXP, SEXP par_matSEXP, SEXP piSEXP, SEXP ncoresSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type par_mat(par_matSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type pi(piSEXP);
    Rcpp::traits::input_parameter< int >::type ncores(ncoresSEXP);
    __result = Rcpp::wrap(grad_vmsin_all_comp(data, par_mat, pi, ncores));
    return __result;
END_RCPP
}
// vmsinmix
double vmsinmix(double x, double y, arma::mat par, arma::vec pi, arma::vec log_c_von);
RcppExport SEXP BAMBI_vmsinmix(SEXP xSEXP, SEXP ySEXP, SEXP parSEXP, SEXP piSEXP, SEXP log_c_vonSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< double >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type par(parSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type pi(piSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type log_c_von(log_c_vonSEXP);
    __result = Rcpp::wrap(vmsinmix(x, y, par, pi, log_c_von));
    return __result;
END_RCPP
}
// vmsinmix_manyx
arma::vec vmsinmix_manyx(arma::mat x, arma::mat par, arma::vec pi, arma::vec log_c_von);
RcppExport SEXP BAMBI_vmsinmix_manyx(SEXP xSEXP, SEXP parSEXP, SEXP piSEXP, SEXP log_c_vonSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type par(parSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type pi(piSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type log_c_von(log_c_vonSEXP);
    __result = Rcpp::wrap(vmsinmix_manyx(x, par, pi, log_c_von));
    return __result;
END_RCPP
}
// ldwnorm2_num
long double ldwnorm2_num(arma::vec x, arma::vec par, arma::mat omega_2pi);
RcppExport SEXP BAMBI_ldwnorm2_num(SEXP xSEXP, SEXP parSEXP, SEXP omega_2piSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::vec >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type par(parSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type omega_2pi(omega_2piSEXP);
    __result = Rcpp::wrap(ldwnorm2_num(x, par, omega_2pi));
    return __result;
END_RCPP
}
// l_const_wnorm2
double l_const_wnorm2(arma::vec par);
RcppExport SEXP BAMBI_l_const_wnorm2(SEXP parSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::vec >::type par(parSEXP);
    __result = Rcpp::wrap(l_const_wnorm2(par));
    return __result;
END_RCPP
}
// const_wnorm2
double const_wnorm2(arma::vec par);
RcppExport SEXP BAMBI_const_wnorm2(SEXP parSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::vec >::type par(parSEXP);
    __result = Rcpp::wrap(const_wnorm2(par));
    return __result;
END_RCPP
}
// log_const_wnorm2_all
arma::vec log_const_wnorm2_all(arma::mat par_mat);
RcppExport SEXP BAMBI_log_const_wnorm2_all(SEXP par_matSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::mat >::type par_mat(par_matSEXP);
    __result = Rcpp::wrap(log_const_wnorm2_all(par_mat));
    return __result;
END_RCPP
}
// mem_p_wnorm2
arma::mat mem_p_wnorm2(arma::mat data, arma::mat par_mat, arma::vec pi, arma::vec log_c_wnorm, arma::mat omega_2pi, int ncores);
RcppExport SEXP BAMBI_mem_p_wnorm2(SEXP dataSEXP, SEXP par_matSEXP, SEXP piSEXP, SEXP log_c_wnormSEXP, SEXP omega_2piSEXP, SEXP ncoresSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type par_mat(par_matSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type pi(piSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type log_c_wnorm(log_c_wnormSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type omega_2pi(omega_2piSEXP);
    Rcpp::traits::input_parameter< int >::type ncores(ncoresSEXP);
    __result = Rcpp::wrap(mem_p_wnorm2(data, par_mat, pi, log_c_wnorm, omega_2pi, ncores));
    return __result;
END_RCPP
}
// llik_wnorm2_full
long double llik_wnorm2_full(arma::mat data, arma::mat par, arma::vec pi, arma::vec log_c, arma::mat omega_2pi, int ncores);
RcppExport SEXP BAMBI_llik_wnorm2_full(SEXP dataSEXP, SEXP parSEXP, SEXP piSEXP, SEXP log_cSEXP, SEXP omega_2piSEXP, SEXP ncoresSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type par(parSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type pi(piSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type log_c(log_cSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type omega_2pi(omega_2piSEXP);
    Rcpp::traits::input_parameter< int >::type ncores(ncoresSEXP);
    __result = Rcpp::wrap(llik_wnorm2_full(data, par, pi, log_c, omega_2pi, ncores));
    return __result;
END_RCPP
}
// grad_den_wnorm2_one_comp_i_unadj
arma::vec grad_den_wnorm2_one_comp_i_unadj(double x, double y, arma::vec par, double det_sig_inv, double det_sig_inv_sqrt, arma::mat omega_2pi);
RcppExport SEXP BAMBI_grad_den_wnorm2_one_comp_i_unadj(SEXP xSEXP, SEXP ySEXP, SEXP parSEXP, SEXP det_sig_invSEXP, SEXP det_sig_inv_sqrtSEXP, SEXP omega_2piSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< double >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::vec >::type par(parSEXP);
    Rcpp::traits::input_parameter< double >::type det_sig_inv(det_sig_invSEXP);
    Rcpp::traits::input_parameter< double >::type det_sig_inv_sqrt(det_sig_inv_sqrtSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type omega_2pi(omega_2piSEXP);
    __result = Rcpp::wrap(grad_den_wnorm2_one_comp_i_unadj(x, y, par, det_sig_inv, det_sig_inv_sqrt, omega_2pi));
    return __result;
END_RCPP
}
// grad_wnorm2_all_comp
arma::mat grad_wnorm2_all_comp(arma::mat data, arma::mat par_mat, arma::vec pi, arma::mat omega_2pi, int ncores);
RcppExport SEXP BAMBI_grad_wnorm2_all_comp(SEXP dataSEXP, SEXP par_matSEXP, SEXP piSEXP, SEXP omega_2piSEXP, SEXP ncoresSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type par_mat(par_matSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type pi(piSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type omega_2pi(omega_2piSEXP);
    Rcpp::traits::input_parameter< int >::type ncores(ncoresSEXP);
    __result = Rcpp::wrap(grad_wnorm2_all_comp(data, par_mat, pi, omega_2pi, ncores));
    return __result;
END_RCPP
}
// wnorm2mix
long double wnorm2mix(arma::vec x, arma::mat par, arma::vec pi, arma::vec log_wnorm_const, arma::mat omega_2pi);
RcppExport SEXP BAMBI_wnorm2mix(SEXP xSEXP, SEXP parSEXP, SEXP piSEXP, SEXP log_wnorm_constSEXP, SEXP omega_2piSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::vec >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type par(parSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type pi(piSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type log_wnorm_const(log_wnorm_constSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type omega_2pi(omega_2piSEXP);
    __result = Rcpp::wrap(wnorm2mix(x, par, pi, log_wnorm_const, omega_2pi));
    return __result;
END_RCPP
}
// wnorm2mix_manyx
arma::vec wnorm2mix_manyx(arma::mat x, arma::mat par, arma::vec pi, arma::vec log_c_von, arma::mat omega_2pi);
RcppExport SEXP BAMBI_wnorm2mix_manyx(SEXP xSEXP, SEXP parSEXP, SEXP piSEXP, SEXP log_c_vonSEXP, SEXP omega_2piSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type par(parSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type pi(piSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type log_c_von(log_c_vonSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type omega_2pi(omega_2piSEXP);
    __result = Rcpp::wrap(wnorm2mix_manyx(x, par, pi, log_c_von, omega_2pi));
    return __result;
END_RCPP
}
// dwnorm2_onex_manypar
arma::vec dwnorm2_onex_manypar(arma::vec x, arma::vec k1, arma::vec k2, arma::vec k3, arma::vec mu1, arma::vec mu2, arma::mat omega_2pi);
RcppExport SEXP BAMBI_dwnorm2_onex_manypar(SEXP xSEXP, SEXP k1SEXP, SEXP k2SEXP, SEXP k3SEXP, SEXP mu1SEXP, SEXP mu2SEXP, SEXP omega_2piSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::vec >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type k1(k1SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type k2(k2SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type k3(k3SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type mu1(mu1SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type mu2(mu2SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type omega_2pi(omega_2piSEXP);
    __result = Rcpp::wrap(dwnorm2_onex_manypar(x, k1, k2, k3, mu1, mu2, omega_2pi));
    return __result;
END_RCPP
}
// dwnorm2_manyx_onepar
arma::vec dwnorm2_manyx_onepar(arma::mat x, double k1, double k2, double k3, double mu1, double mu2, arma::mat omega_2pi);
RcppExport SEXP BAMBI_dwnorm2_manyx_onepar(SEXP xSEXP, SEXP k1SEXP, SEXP k2SEXP, SEXP k3SEXP, SEXP mu1SEXP, SEXP mu2SEXP, SEXP omega_2piSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type k1(k1SEXP);
    Rcpp::traits::input_parameter< double >::type k2(k2SEXP);
    Rcpp::traits::input_parameter< double >::type k3(k3SEXP);
    Rcpp::traits::input_parameter< double >::type mu1(mu1SEXP);
    Rcpp::traits::input_parameter< double >::type mu2(mu2SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type omega_2pi(omega_2piSEXP);
    __result = Rcpp::wrap(dwnorm2_manyx_onepar(x, k1, k2, k3, mu1, mu2, omega_2pi));
    return __result;
END_RCPP
}
// dwnorm2_manyx_manypar
arma::vec dwnorm2_manyx_manypar(arma::mat x, arma::vec k1, arma::vec k2, arma::vec k3, arma::vec mu1, arma::vec mu2, arma::mat omega_2pi);
RcppExport SEXP BAMBI_dwnorm2_manyx_manypar(SEXP xSEXP, SEXP k1SEXP, SEXP k2SEXP, SEXP k3SEXP, SEXP mu1SEXP, SEXP mu2SEXP, SEXP omega_2piSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type k1(k1SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type k2(k2SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type k3(k3SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type mu1(mu1SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type mu2(mu2SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type omega_2pi(omega_2piSEXP);
    __result = Rcpp::wrap(dwnorm2_manyx_manypar(x, k1, k2, k3, mu1, mu2, omega_2pi));
    return __result;
END_RCPP
}
